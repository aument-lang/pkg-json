import "./lexer.au" as lexer;

class parser {
    var lexer;
}

def new(string) {
    return new parser {
        lexer: lexer::new(string),
    };
}

def (self: parser) expect_op(string) {
    token = @lexer.lexer::next();
    if token.lexer::t_type() != lexer::TOKEN_OP {
        // TODO: error
        print "expected operator\n";
        sys::abort();
    }
    if token.lexer::t_data() != string {
        // TODO: error
        print "expected ", string, "\n";
        sys::abort();
    }
}

def (self: parser) do_parse() {
    self.expect_op("{");
    self.expect_op("}");
}

// ** Public methods **
export def parse(source) {
    return new(source).do_parse();
}
